# Settings file for Instanssi website/management system
#
# Some settings you should make sure to set correctly:
# DATABASES
# DEBUG
# TIME_ZONE
# LANGUAGE_CODE
# SECRET_KEY

from .common_config import *

# Settings
DEBUG = True
ADMIN = True

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(PROJECTDIR, 'database.db'),
        'USER': '', 
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}

# Google api stuff
GOOGLE_API_KEY = ''
GOOGLE_ANALYTICS = False
GOOGLE_ANALYTICS_CODE = ''

# Generic stuff
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1'
]
TIME_ZONE = 'Europe/Helsinki'
LANGUAGE_CODE = 'fi-FI'
SHORT_LANGUAGE_CODE = 'fi'

# Hackish, but will do for now
SSL_ON = True
DOMAIN = 'instanssi.org'

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

# Twitter tag
TWITTER_OAUTH_TOKEN = ''
TWITTER_OAUTH_SECRET = ''
TWITTER_CONSUMER_KEY = ''
TWITTER_CONSUMER_SECRET = ''

# Steam API
SOCIAL_AUTH_STEAM_API_KEY = ''

# Twitter Auth
SOCIAL_AUTH_TWITTER_KEY = TWITTER_CONSUMER_KEY
SOCIAL_AUTH_TWITTER_SECRET = TWITTER_CONSUMER_SECRET

# Facebook
SOCIAL_AUTH_FACEBOOK_KEY = ''
SOCIAL_AUTH_FACEBOOK_SECRET = ''
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'locale': 'fi_FI',
    'fields': 'id,name,email',
}

# Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email']

# Battle.net
SOCIAL_AUTH_BATTLENET_OAUTH2_KEY = ''
SOCIAL_AUTH_BATTLENET_OAUTH2_SECRET = ''

# Github
SOCIAL_AUTH_GITHUB_KEY = ''
SOCIAL_AUTH_GITHUB_SECRET = ''
SOCIAL_AUTH_GITHUB_SCOPE = ['email']

# JSON api key
JSON_KEY = u'12341234'

# Paytrail aka. Suomen Verkkomaksut
# See http://docs.paytrail.com/fi/index-all.html for API specs
VMAKSUT_ID = u'13466'  # Test ID
VMAKSUT_SECRET = u'6pKF4jkv97zmqBJ3ZL8gUw5DfT2NMQ'  # Test secret

# Crispy forms stuff
CRISPY_FAIL_SILENTLY = not DEBUG
CRISPY_TEMPLATE_PACK = 'bootstrap3'

# Initialize email configuration
EMAIL_BACKEND = make_email_conf(DEBUG)

# Initialize cache configuration
CACHES = make_cache_conf(DEBUG)

# Initializes celery config
CELERY_BROKER_URL, CELERY_BROKER_TRANSPORT_OPTIONS = make_celery_conf(DEBUG)

# Internal ip addresses
INTERNAL_IPS = (
    '127.0.0.1',
)

# Setup sentry
setup_sentry(locals())
