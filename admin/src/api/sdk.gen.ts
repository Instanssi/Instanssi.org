// This file is auto-generated by @hey-api/openapi-ts

import {
    createClient,
    createConfig,
    type OptionsLegacyParser,
    formDataBodySerializer,
} from "@hey-api/client-axios";
import type {
    LoginData,
    LoginError,
    LoginResponse,
    LogoutError,
    LogoutResponse,
    GetSocialAuthUrlsData,
    GetSocialAuthUrlsError,
    GetSocialAuthUrlsResponse,
    BlogEntriesListData,
    BlogEntriesListError,
    BlogEntriesListResponse,
    BlogEntriesCreateData,
    BlogEntriesCreateError,
    BlogEntriesCreateResponse,
    BlogEntriesRetrieveData,
    BlogEntriesRetrieveError,
    BlogEntriesRetrieveResponse,
    BlogEntriesUpdateData,
    BlogEntriesUpdateError,
    BlogEntriesUpdateResponse,
    BlogEntriesPartialUpdateData,
    BlogEntriesPartialUpdateError,
    BlogEntriesPartialUpdateResponse,
    BlogEntriesDestroyData,
    BlogEntriesDestroyError,
    BlogEntriesDestroyResponse,
    EventsListData,
    EventsListError,
    EventsListResponse,
    EventsCreateData,
    EventsCreateError,
    EventsCreateResponse,
    EventsRetrieveData,
    EventsRetrieveError,
    EventsRetrieveResponse,
    EventsUpdateData,
    EventsUpdateError,
    EventsUpdateResponse,
    EventsPartialUpdateData,
    EventsPartialUpdateError,
    EventsPartialUpdateResponse,
    EventsDestroyData,
    EventsDestroyError,
    EventsDestroyResponse,
    UserCompoEntriesListData,
    UserCompoEntriesListError,
    UserCompoEntriesListResponse,
    UserCompoEntriesCreateData,
    UserCompoEntriesCreateError,
    UserCompoEntriesCreateResponse,
    UserCompoEntriesRetrieveData,
    UserCompoEntriesRetrieveError,
    UserCompoEntriesRetrieveResponse,
    UserCompoEntriesUpdateData,
    UserCompoEntriesUpdateError,
    UserCompoEntriesUpdateResponse,
    UserCompoEntriesPartialUpdateData,
    UserCompoEntriesPartialUpdateError,
    UserCompoEntriesPartialUpdateResponse,
    UserCompoEntriesDestroyData,
    UserCompoEntriesDestroyError,
    UserCompoEntriesDestroyResponse,
    UserInfoError,
    UserInfoResponse,
    UsersListData,
    UsersListError,
    UsersListResponse,
    UsersCreateData,
    UsersCreateError,
    UsersCreateResponse,
    UsersRetrieveData,
    UsersRetrieveError,
    UsersRetrieveResponse,
    UsersUpdateData,
    UsersUpdateError,
    UsersUpdateResponse,
    UsersPartialUpdateData,
    UsersPartialUpdateError,
    UsersPartialUpdateResponse,
    UsersDestroyData,
    UsersDestroyError,
    UsersDestroyResponse,
} from "./types.gen";

export const client = createClient(createConfig());

export const login = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<LoginData, ThrowOnError>
) => {
    return (options?.client ?? client).post<LoginResponse, LoginError, ThrowOnError>({
        ...options,
        url: "/api/v2/auth/login/",
    });
};

export const logout = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
    return (options?.client ?? client).post<LogoutResponse, LogoutError, ThrowOnError>({
        ...options,
        url: "/api/v2/auth/logout/",
    });
};

/**
 * Returns a list of URLs that can be used to begin a social authentication process.
 */
export const getSocialAuthUrls = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<GetSocialAuthUrlsData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        GetSocialAuthUrlsResponse,
        GetSocialAuthUrlsError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/auth/social_urls/",
    });
};

export const blogEntriesList = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<BlogEntriesListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        BlogEntriesListResponse,
        BlogEntriesListError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/",
    });
};

export const blogEntriesCreate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<BlogEntriesCreateData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        BlogEntriesCreateResponse,
        BlogEntriesCreateError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/",
    });
};

export const blogEntriesRetrieve = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<BlogEntriesRetrieveData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        BlogEntriesRetrieveResponse,
        BlogEntriesRetrieveError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/{id}/",
    });
};

export const blogEntriesUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<BlogEntriesUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<
        BlogEntriesUpdateResponse,
        BlogEntriesUpdateError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/{id}/",
    });
};

export const blogEntriesPartialUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<BlogEntriesPartialUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).patch<
        BlogEntriesPartialUpdateResponse,
        BlogEntriesPartialUpdateError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/{id}/",
    });
};

export const blogEntriesDestroy = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<BlogEntriesDestroyData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        BlogEntriesDestroyResponse,
        BlogEntriesDestroyError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/blog_entries/{id}/",
    });
};

export const eventsList = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<EventsListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<EventsListResponse, EventsListError, ThrowOnError>({
        ...options,
        url: "/api/v2/events/",
    });
};

export const eventsCreate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<EventsCreateData, ThrowOnError>
) => {
    return (options?.client ?? client).post<EventsCreateResponse, EventsCreateError, ThrowOnError>({
        ...options,
        url: "/api/v2/events/",
    });
};

export const eventsRetrieve = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<EventsRetrieveData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        EventsRetrieveResponse,
        EventsRetrieveError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/events/{id}/",
    });
};

export const eventsUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<EventsUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<EventsUpdateResponse, EventsUpdateError, ThrowOnError>({
        ...options,
        url: "/api/v2/events/{id}/",
    });
};

export const eventsPartialUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<EventsPartialUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).patch<
        EventsPartialUpdateResponse,
        EventsPartialUpdateError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/events/{id}/",
    });
};

export const eventsDestroy = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<EventsDestroyData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        EventsDestroyResponse,
        EventsDestroyError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/events/{id}/",
    });
};

export const userCompoEntriesList = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<UserCompoEntriesListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        UserCompoEntriesListResponse,
        UserCompoEntriesListError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/user_compo_entries/",
    });
};

export const userCompoEntriesCreate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UserCompoEntriesCreateData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        UserCompoEntriesCreateResponse,
        UserCompoEntriesCreateError,
        ThrowOnError
    >({
        ...options,
        ...formDataBodySerializer,
        headers: {
            "Content-Type": null,
            ...options?.headers,
        },
        url: "/api/v2/user_compo_entries/",
    });
};

export const userCompoEntriesRetrieve = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UserCompoEntriesRetrieveData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        UserCompoEntriesRetrieveResponse,
        UserCompoEntriesRetrieveError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/user_compo_entries/{id}/",
    });
};

export const userCompoEntriesUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UserCompoEntriesUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<
        UserCompoEntriesUpdateResponse,
        UserCompoEntriesUpdateError,
        ThrowOnError
    >({
        ...options,
        ...formDataBodySerializer,
        headers: {
            "Content-Type": null,
            ...options?.headers,
        },
        url: "/api/v2/user_compo_entries/{id}/",
    });
};

export const userCompoEntriesPartialUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UserCompoEntriesPartialUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).patch<
        UserCompoEntriesPartialUpdateResponse,
        UserCompoEntriesPartialUpdateError,
        ThrowOnError
    >({
        ...options,
        ...formDataBodySerializer,
        headers: {
            "Content-Type": null,
            ...options?.headers,
        },
        url: "/api/v2/user_compo_entries/{id}/",
    });
};

export const userCompoEntriesDestroy = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UserCompoEntriesDestroyData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        UserCompoEntriesDestroyResponse,
        UserCompoEntriesDestroyError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/user_compo_entries/{id}/",
    });
};

export const userInfo = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
    return (options?.client ?? client).get<UserInfoResponse, UserInfoError, ThrowOnError>({
        ...options,
        url: "/api/v2/user_info/",
    });
};

export const usersList = <ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<UsersListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<UsersListResponse, UsersListError, ThrowOnError>({
        ...options,
        url: "/api/v2/users/",
    });
};

export const usersCreate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UsersCreateData, ThrowOnError>
) => {
    return (options?.client ?? client).post<UsersCreateResponse, UsersCreateError, ThrowOnError>({
        ...options,
        url: "/api/v2/users/",
    });
};

export const usersRetrieve = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UsersRetrieveData, ThrowOnError>
) => {
    return (options?.client ?? client).get<UsersRetrieveResponse, UsersRetrieveError, ThrowOnError>(
        {
            ...options,
            url: "/api/v2/users/{id}/",
        }
    );
};

export const usersUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UsersUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<UsersUpdateResponse, UsersUpdateError, ThrowOnError>({
        ...options,
        url: "/api/v2/users/{id}/",
    });
};

export const usersPartialUpdate = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UsersPartialUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).patch<
        UsersPartialUpdateResponse,
        UsersPartialUpdateError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/users/{id}/",
    });
};

export const usersDestroy = <ThrowOnError extends boolean = false>(
    options: OptionsLegacyParser<UsersDestroyData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        UsersDestroyResponse,
        UsersDestroyError,
        ThrowOnError
    >({
        ...options,
        url: "/api/v2/users/{id}/",
    });
};
