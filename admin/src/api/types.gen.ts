// This file is auto-generated by @hey-api/openapi-ts

export type AlternateEntryFile = {
    readonly format: string;
    readonly url: string;
};

export type BlogEntry = {
    readonly id: number;
    user?: number;
    readonly date: string;
    /**
     * Lyhyt otsikko entrylle.
     */
    title: string;
    text: string;
    /**
     * Mikäli entry on julkinen, tulee se näkyviin sekä tapahtuman sivuille että RSS-syötteeseen.
     */
    public?: boolean;
    event: number;
    readonly created_by: string;
};

export type BlogEntryRequest = {
    user?: number;
    /**
     * Lyhyt otsikko entrylle.
     */
    title: string;
    text: string;
    /**
     * Mikäli entry on julkinen, tulee se näkyviin sekä tapahtuman sivuille että RSS-syötteeseen.
     */
    public?: boolean;
    event: number;
};

export type CompoEntry = {
    readonly id: number;
    /**
     * Kompo johon osallistutaan
     */
    compo: number;
    /**
     * Nimi tuotokselle
     */
    name: string;
    /**
     * Voi sisältää mm. tietoja käytetyistä tekniikoista, muuta sanottavaa.
     */
    description: string;
    /**
     * Tuotoksen tekijän tai tekijäryhmän nimi
     */
    creator: string;
    /**
     * Alusta jolla entry toimii. Voit jättää tyhjäksi jos entry ei sisällä ajettavaa koodia.
     */
    platform?: string | null;
    readonly entry_file_url: string | null;
    readonly source_file_url: string | null;
    readonly image_file_original_url: string | null;
    readonly image_file_thumbnail_url: string | null;
    readonly image_file_medium_url: string | null;
    readonly youtube_url: string | null;
    readonly disqualified: boolean | null;
    readonly disqualified_reason: string | null;
    readonly score: number | null;
    readonly rank: number | null;
    readonly alternate_files: Array<AlternateEntryFile>;
};

export type CompoEntryRequest = {
    /**
     * Kompo johon osallistutaan
     */
    compo: number;
    /**
     * Nimi tuotokselle
     */
    name: string;
    /**
     * Voi sisältää mm. tietoja käytetyistä tekniikoista, muuta sanottavaa.
     */
    description: string;
    /**
     * Tuotoksen tekijän tai tekijäryhmän nimi
     */
    creator: string;
    /**
     * Alusta jolla entry toimii. Voit jättää tyhjäksi jos entry ei sisällä ajettavaa koodia.
     */
    platform?: string | null;
};

export type Event = {
    readonly id: number;
    /**
     * Tapahtuman nimi
     */
    name: string;
    /**
     * Lyhyt nimi, eg. vuosi
     */
    tag?: string | null;
    /**
     * Tapahtuman päivämäärä (alku)
     */
    date: string;
    /**
     * Saa näyttää arkistossa
     */
    archived?: boolean;
    /**
     * URL Tapahtuman pääsivustolle
     */
    mainurl?: string;
};

export type EventRequest = {
    /**
     * Tapahtuman nimi
     */
    name: string;
    /**
     * Lyhyt nimi, eg. vuosi
     */
    tag?: string | null;
    /**
     * Tapahtuman päivämäärä (alku)
     */
    date: string;
    /**
     * Saa näyttää arkistossa
     */
    archived?: boolean;
    /**
     * URL Tapahtuman pääsivustolle
     */
    mainurl?: string;
};

export type Group = {
    name: string;
};

export type GroupRequest = {
    name: string;
};

export type PaginatedBlogEntryList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<BlogEntry>;
};

export type PaginatedCompoEntryList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<CompoEntry>;
};

export type PaginatedEventList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<Event>;
};

export type PaginatedUserList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<User>;
};

export type PatchedBlogEntryRequest = {
    user?: number;
    /**
     * Lyhyt otsikko entrylle.
     */
    title?: string;
    text?: string;
    /**
     * Mikäli entry on julkinen, tulee se näkyviin sekä tapahtuman sivuille että RSS-syötteeseen.
     */
    public?: boolean;
    event?: number;
};

export type PatchedCompoEntryRequest = {
    /**
     * Kompo johon osallistutaan
     */
    compo?: number;
    /**
     * Nimi tuotokselle
     */
    name?: string;
    /**
     * Voi sisältää mm. tietoja käytetyistä tekniikoista, muuta sanottavaa.
     */
    description?: string;
    /**
     * Tuotoksen tekijän tai tekijäryhmän nimi
     */
    creator?: string;
    /**
     * Alusta jolla entry toimii. Voit jättää tyhjäksi jos entry ei sisällä ajettavaa koodia.
     */
    platform?: string | null;
};

export type PatchedEventRequest = {
    /**
     * Tapahtuman nimi
     */
    name?: string;
    /**
     * Lyhyt nimi, eg. vuosi
     */
    tag?: string | null;
    /**
     * Tapahtuman päivämäärä (alku)
     */
    date?: string;
    /**
     * Saa näyttää arkistossa
     */
    archived?: boolean;
    /**
     * URL Tapahtuman pääsivustolle
     */
    mainurl?: string;
};

export type PatchedUserRequest = {
    /**
     * Vaaditaan. Enintään 150 merkkiä. Vain kirjaimet, numerot ja @/./+/-/_ ovat sallittuja.
     */
    username?: string;
    first_name?: string;
    last_name?: string;
    email?: string;
    /**
     * Määrää, voiko käyttäjä kirjautua sisään. Tällä voi estää käyttäjätilin käytön poistamatta sitä.
     */
    is_active?: boolean;
};

export type Permission = {
    name: string;
    codename: string;
};

export type PermissionRequest = {
    name: string;
    codename: string;
};

export type SocialAuthURL = {
    method: string;
    url: string;
    name: string;
};

export type User = {
    readonly id: number;
    /**
     * Vaaditaan. Enintään 150 merkkiä. Vain kirjaimet, numerot ja @/./+/-/_ ovat sallittuja.
     */
    username: string;
    first_name?: string;
    last_name?: string;
    email?: string;
    readonly user_permissions: Array<Permission>;
    /**
     * Antaa käyttäjälle kaikki oikeudet ilman, että niitä täytyy erikseen luetella.
     */
    readonly is_superuser: boolean;
    readonly date_joined: string;
    readonly groups: Array<Group>;
    /**
     * Määrää, voiko käyttäjä kirjautua sisään. Tällä voi estää käyttäjätilin käytön poistamatta sitä.
     */
    is_active?: boolean;
};

export type UserInfo = {
    readonly id: number;
    /**
     * Vaaditaan. Enintään 150 merkkiä. Vain kirjaimet, numerot ja @/./+/-/_ ovat sallittuja.
     */
    username: string;
    first_name?: string;
    last_name?: string;
    email?: string;
    readonly user_permissions: Array<Permission>;
    /**
     * Antaa käyttäjälle kaikki oikeudet ilman, että niitä täytyy erikseen luetella.
     */
    readonly is_superuser: boolean;
    readonly date_joined: string;
};

export type UserLoginRequest = {
    username: string;
    password: string;
};

export type UserRequest = {
    /**
     * Vaaditaan. Enintään 150 merkkiä. Vain kirjaimet, numerot ja @/./+/-/_ ovat sallittuja.
     */
    username: string;
    first_name?: string;
    last_name?: string;
    email?: string;
    /**
     * Määrää, voiko käyttäjä kirjautua sisään. Tällä voi estää käyttäjätilin käytön poistamatta sitä.
     */
    is_active?: boolean;
};

export type LoginData = {
    body: UserLoginRequest;
};

export type LoginResponse = void;

export type LoginError = unknown;

export type LogoutResponse = void;

export type LogoutError = unknown;

export type GetSocialAuthUrlsData = {
    query?: {
        next?: string;
    };
};

export type GetSocialAuthUrlsResponse = Array<SocialAuthURL>;

export type GetSocialAuthUrlsError = unknown;

export type BlogEntriesListData = {
    query?: {
        event?: number;
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A search term.
         */
        search?: string;
        user?: number;
    };
};

export type BlogEntriesListResponse = PaginatedBlogEntryList;

export type BlogEntriesListError = unknown;

export type BlogEntriesCreateData = {
    body: BlogEntryRequest;
};

export type BlogEntriesCreateResponse = BlogEntry;

export type BlogEntriesCreateError = unknown;

export type BlogEntriesRetrieveData = {
    path: {
        /**
         * A unique integer value identifying this entry.
         */
        id: number;
    };
};

export type BlogEntriesRetrieveResponse = BlogEntry;

export type BlogEntriesRetrieveError = unknown;

export type BlogEntriesUpdateData = {
    body: BlogEntryRequest;
    path: {
        /**
         * A unique integer value identifying this entry.
         */
        id: number;
    };
};

export type BlogEntriesUpdateResponse = BlogEntry;

export type BlogEntriesUpdateError = unknown;

export type BlogEntriesPartialUpdateData = {
    body?: PatchedBlogEntryRequest;
    path: {
        /**
         * A unique integer value identifying this entry.
         */
        id: number;
    };
};

export type BlogEntriesPartialUpdateResponse = BlogEntry;

export type BlogEntriesPartialUpdateError = unknown;

export type BlogEntriesDestroyData = {
    path: {
        /**
         * A unique integer value identifying this entry.
         */
        id: number;
    };
};

export type BlogEntriesDestroyResponse = void;

export type BlogEntriesDestroyError = unknown;

export type EventsListData = {
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        name?: string;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
    };
};

export type EventsListResponse = PaginatedEventList;

export type EventsListError = unknown;

export type EventsCreateData = {
    body: EventRequest;
};

export type EventsCreateResponse = Event;

export type EventsCreateError = unknown;

export type EventsRetrieveData = {
    path: {
        /**
         * A unique integer value identifying this tapahtuma.
         */
        id: number;
    };
};

export type EventsRetrieveResponse = Event;

export type EventsRetrieveError = unknown;

export type EventsUpdateData = {
    body: EventRequest;
    path: {
        /**
         * A unique integer value identifying this tapahtuma.
         */
        id: number;
    };
};

export type EventsUpdateResponse = Event;

export type EventsUpdateError = unknown;

export type EventsPartialUpdateData = {
    body?: PatchedEventRequest;
    path: {
        /**
         * A unique integer value identifying this tapahtuma.
         */
        id: number;
    };
};

export type EventsPartialUpdateResponse = Event;

export type EventsPartialUpdateError = unknown;

export type EventsDestroyData = {
    path: {
        /**
         * A unique integer value identifying this tapahtuma.
         */
        id: number;
    };
};

export type EventsDestroyResponse = void;

export type EventsDestroyError = unknown;

export type UserCompoEntriesListData = {
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
    };
};

export type UserCompoEntriesListResponse = PaginatedCompoEntryList;

export type UserCompoEntriesListError = unknown;

export type UserCompoEntriesCreateData = {
    body: CompoEntryRequest;
};

export type UserCompoEntriesCreateResponse = CompoEntry;

export type UserCompoEntriesCreateError = unknown;

export type UserCompoEntriesRetrieveData = {
    path: {
        id: string;
    };
};

export type UserCompoEntriesRetrieveResponse = CompoEntry;

export type UserCompoEntriesRetrieveError = unknown;

export type UserCompoEntriesUpdateData = {
    body: CompoEntryRequest;
    path: {
        id: string;
    };
};

export type UserCompoEntriesUpdateResponse = CompoEntry;

export type UserCompoEntriesUpdateError = unknown;

export type UserCompoEntriesPartialUpdateData = {
    body?: PatchedCompoEntryRequest;
    path: {
        id: string;
    };
};

export type UserCompoEntriesPartialUpdateResponse = CompoEntry;

export type UserCompoEntriesPartialUpdateError = unknown;

export type UserCompoEntriesDestroyData = {
    path: {
        id: string;
    };
};

export type UserCompoEntriesDestroyResponse = void;

export type UserCompoEntriesDestroyError = unknown;

export type UserInfoResponse = Array<UserInfo>;

export type UserInfoError = unknown;

export type UsersListData = {
    query?: {
        email?: string;
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A search term.
         */
        search?: string;
        username?: string;
    };
};

export type UsersListResponse = PaginatedUserList;

export type UsersListError = unknown;

export type UsersCreateData = {
    body: UserRequest;
};

export type UsersCreateResponse = User;

export type UsersCreateError = unknown;

export type UsersRetrieveData = {
    path: {
        /**
         * A unique integer value identifying this käyttäjä.
         */
        id: number;
    };
};

export type UsersRetrieveResponse = User;

export type UsersRetrieveError = unknown;

export type UsersUpdateData = {
    body: UserRequest;
    path: {
        /**
         * A unique integer value identifying this käyttäjä.
         */
        id: number;
    };
};

export type UsersUpdateResponse = User;

export type UsersUpdateError = unknown;

export type UsersPartialUpdateData = {
    body?: PatchedUserRequest;
    path: {
        /**
         * A unique integer value identifying this käyttäjä.
         */
        id: number;
    };
};

export type UsersPartialUpdateResponse = User;

export type UsersPartialUpdateError = unknown;

export type UsersDestroyData = {
    path: {
        /**
         * A unique integer value identifying this käyttäjä.
         */
        id: number;
    };
};

export type UsersDestroyResponse = void;

export type UsersDestroyError = unknown;
