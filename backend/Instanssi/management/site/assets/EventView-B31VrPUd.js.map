{"version":3,"file":"EventView-B31VrPUd.js","sources":["../../../../../admin/src/components/EventDialog.vue","../../../../../admin/src/views/EventView.vue"],"sourcesContent":["<template>\n    <BaseDialog\n        :title=\"t('EventDialog.title')\"\n        :ok-text=\"t('General.save')\"\n        ok-icon=\"fas fa-floppy-disk\"\n        :width=\"1000\"\n        ref=\"dialog\"\n    >\n        <v-form>\n            <v-text-field v-model=\"name\" variant=\"outlined\" :label=\"t('EventDialog.labels.name')\" />\n            <v-text-field v-model=\"tag\" variant=\"outlined\" :label=\"t('EventDialog.labels.tag')\" />\n            <v-text-field\n                type=\"date\"\n                v-model=\"date\"\n                variant=\"outlined\"\n                :label=\"t('EventDialog.labels.date')\"\n            />\n            <v-text-field\n                v-model=\"mainUrl\"\n                variant=\"outlined\"\n                :label=\"t('EventDialog.labels.mainUrl')\"\n            />\n            <v-switch v-model=\"archived\" :label=\"archivedLabel\" />\n        </v-form>\n    </BaseDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseDialog from \"@/components/BaseDialog.vue\";\nimport { computed, type Ref, ref } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport type { Event } from \"@/api\";\n\nconst dialog: Ref<InstanceType<typeof BaseDialog> | undefined> = ref();\n\nconst { t } = useI18n();\nconst name = ref(\"\");\nconst tag = ref(\"\");\nconst date = ref(\"\");\nconst archived = ref(false);\nconst mainUrl = ref(\"\");\nconst archivedLabel = computed(() =>\n    archived.value ? t(\"EventDialog.labels.isArchived\") : t(\"EventDialog.labels.isNotArchived\")\n);\n\nasync function modal(item: undefined | Event = undefined) {\n    if (item !== undefined) {\n        name.value = item.name;\n        tag.value = item.tag ?? \"\";\n        date.value = item.date;\n        archived.value = item.archived ?? false;\n        mainUrl.value = item.mainurl ?? \"\";\n    } else {\n        name.value = \"\";\n        tag.value = \"\";\n        date.value = \"\";\n        archived.value = false;\n        mainUrl.value = \"\";\n    }\n    const ok = (await dialog.value?.modal()) ?? false;\n    return {\n        ok,\n        name: name.value,\n        tag: tag.value,\n        date: date.value,\n        archived: archived.value,\n        mainUrl: mainUrl.value,\n    };\n}\n\ndefineExpose({ modal });\n</script>\n\n<style scoped lang=\"scss\"></style>\n","<template>\n    <LayoutBase :title=\"t('EventView.title')\">\n        <v-col>\n            <v-row>\n                <v-btn\n                    v-if=\"auth.canAdd(PermissionTarget.EVENT)\"\n                    prepend-icon=\"fas fa-plus\"\n                    @click=\"createEvent\"\n                >\n                    {{ t(\"EventView.newEvent\") }}\n                </v-btn>\n            </v-row>\n        </v-col>\n        <v-col>\n            <v-row>\n                <v-data-table-server\n                    class=\"elevation-1 primary\"\n                    item-value=\"id\"\n                    density=\"compact\"\n                    :key=\"`blog-table-${refreshKey}`\"\n                    :headers=\"headers\"\n                    :items=\"events\"\n                    :items-length=\"totalItems\"\n                    :loading=\"loading\"\n                    :page=\"currentPage\"\n                    :items-per-page-options=\"pageSizeOptions\"\n                    :no-data-text=\"t('EventView.noEventsFound')\"\n                    :loading-text=\"t('EventView.loadingEvents')\"\n                    v-model:items-per-page=\"perPage\"\n                    @update:options=\"debouncedLoad\"\n                >\n                    <template v-slot:item.archived=\"{ item }\">\n                        <v-icon v-if=\"item.archived\" icon=\"fas fa-check\" color=\"green\" />\n                        <v-icon v-else icon=\"fas fa-xmark\" color=\"red\" />\n                    </template>\n                    <template v-slot:item.date=\"{ item }\">\n                        {{ d(item.date, \"long\") }}\n                    </template>\n                    <template v-slot:item.actions=\"{ item }\">\n                        <v-btn\n                            v-if=\"auth.canDelete(PermissionTarget.EVENT)\"\n                            density=\"compact\"\n                            variant=\"text\"\n                            @click=\"deleteEvent(item)\"\n                            prepend-icon=\"fas fa-xmark\"\n                            color=\"red\"\n                            >Delete</v-btn\n                        >\n                        <v-btn\n                            v-if=\"auth.canChange(PermissionTarget.EVENT)\"\n                            density=\"compact\"\n                            variant=\"text\"\n                            @click=\"editEvent(item.id)\"\n                            prepend-icon=\"fas fa-pen-to-square\"\n                            >Edit</v-btn\n                        >\n                    </template>\n                </v-data-table-server>\n            </v-row>\n        </v-col>\n    </LayoutBase>\n    <EventDialog ref=\"dialog\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, type Ref, ref } from \"vue\";\nimport { debounce } from \"lodash-es\";\n\nimport { useI18n } from \"vue-i18n\";\nimport { useAPI } from \"@/services/api\";\nimport { useToast } from \"vue-toastification\";\n\nimport LayoutBase from \"@/components/LayoutBase.vue\";\nimport EventDialog from \"@/components/EventDialog.vue\";\nimport { confirmDialogKey } from \"@/symbols\";\nimport { PermissionTarget, useAuth } from \"@/services/auth\";\n\nimport type { ConfirmDialogType } from \"@/symbols\";\nimport type { VDataTableServer } from \"vuetify/components\";\nimport type { Event } from \"@/api\";\nimport { getLoadArgs, type LoadArgs } from \"@/services/utils/query_tools\";\n\n// For now, just catch eventId. We don't use it for anything, though.\ndefineProps<{ eventId: string }>();\n\n// Get vuetify data-table headers type, It is not currently exported, so just fetch it by hand :)\ntype ReadonlyHeaders = InstanceType<typeof VDataTableServer>[\"headers\"];\n\nconst { t, d } = useI18n();\n\nconst dialog: Ref<InstanceType<typeof EventDialog> | undefined> = ref(undefined);\nconst confirmDialog: ConfirmDialogType = inject(confirmDialogKey)!;\n\nconst toast = useToast();\nconst api = useAPI();\nconst auth = useAuth();\nconst loading = ref(false);\nconst pageSizeOptions = [25, 50, 100];\nconst perPage = ref(pageSizeOptions[0]);\nconst totalItems = ref(0);\nconst currentPage = ref(1);\nconst events: Ref<Event[]> = ref([]);\nconst refreshKey = ref(0);\nconst headers: ReadonlyHeaders = [\n    {\n        title: t(\"EventView.headers.id\"),\n        sortable: true,\n        key: \"id\",\n    },\n    {\n        title: t(\"EventView.headers.name\"),\n        sortable: false,\n        key: \"name\",\n    },\n    {\n        title: t(\"EventView.headers.tag\"),\n        sortable: false,\n        key: \"tag\",\n    },\n    {\n        title: t(\"EventView.headers.date\"),\n        sortable: true,\n        key: \"date\",\n    },\n    {\n        title: t(\"EventView.headers.archived\"),\n        sortable: false,\n        key: \"archived\",\n    },\n    {\n        title: t(\"EventView.headers.mainUrl\"),\n        sortable: false,\n        key: \"mainurl\",\n    },\n    {\n        title: t(\"EventView.headers.actions\"),\n        sortable: false,\n        key: \"actions\",\n        align: \"end\",\n    },\n];\n\nasync function load(args: LoadArgs) {\n    loading.value = true;\n    const { offset, limit, sortBy } = getLoadArgs(args);\n    try {\n        const { count, results } = await api.events.eventsList(limit, undefined, offset, sortBy);\n        events.value = results;\n        totalItems.value = count;\n    } catch (e) {\n        toast.error(t(\"EventView.errors.failedToLoad\"));\n        console.error(e);\n    } finally {\n        loading.value = false;\n    }\n}\n\nconst debouncedLoad = debounce(load, 250); // Don't murderate the server API\n\nasync function deleteEvent(item: Event): Promise<void> {\n    const text = t(\"EventView.confirmDelete\", item);\n    const ok = await confirmDialog.value!.confirm(text);\n    if (ok) {\n        try {\n            await api.events.eventsDestroy(item.id);\n        } catch (e) {\n            toast.error(t(\"EventView.errors.failedToDelete\"));\n            console.error(e);\n        }\n        refreshKey.value += 1;\n    }\n}\n\nasync function editEvent(id: number): Promise<void> {\n    const item = await api.events.eventsRetrieve(id);\n    const { ok, name, date, archived, tag, mainUrl } = await dialog.value!.modal(item);\n    if (ok) {\n        try {\n            await api.events.eventsPartialUpdate(item.id, {\n                name,\n                date,\n                archived,\n                tag,\n                mainurl: mainUrl,\n            });\n        } catch (e) {\n            toast.error(t(\"EventView.errors.failedToEdit\"));\n            console.error(e);\n        }\n        refreshKey.value += 1;\n    }\n}\n\nasync function createEvent() {\n    const { ok, name, date, archived, tag, mainUrl } = await dialog.value!.modal();\n    if (ok) {\n        try {\n            await api.events.eventsCreate({\n                name,\n                date,\n                archived,\n                tag,\n                mainurl: mainUrl,\n            });\n        } catch (e) {\n            toast.error(t(\"EventView.errors.failedToCreate\"));\n            console.error(e);\n        }\n        currentPage.value = 1;\n        refreshKey.value += 1;\n    }\n}\n</script>\n"],"names":["dialog","ref","t","useI18n","name","tag","date","archived","mainUrl","archivedLabel","computed","modal","item","_a","__expose","d","confirmDialog","inject","confirmDialogKey","toast","useToast","api","useAPI","auth","useAuth","loading","pageSizeOptions","perPage","totalItems","currentPage","events","refreshKey","headers","load","args","offset","limit","sortBy","getLoadArgs","count","results","e","debouncedLoad","debounce","deleteEvent","text","editEvent","id","ok","createEvent"],"mappings":"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"}