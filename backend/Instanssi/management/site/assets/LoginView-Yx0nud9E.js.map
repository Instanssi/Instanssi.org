{"version":3,"file":"LoginView-Yx0nud9E.js","sources":["../../../../../admin/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex align-center justify-center fill-height\">\n        <v-card color=\"grey-darken-4\" class=\"opacity-95\" :title=\"t('LoginView.title')\">\n            <template v-slot:subtitle>\n                {{ t(\"LoginView.subtitle\") }}\n            </template>\n            <template v-slot:text>\n                <div class=\"d-flex justify-center\">\n                    <v-btn\n                        v-for=\"method in socialLoginUrls\"\n                        :key=\"method.method\"\n                        variant=\"plain\"\n                        :prepend-icon=\"`fab fa-${method.method}`\"\n                        :href=\"method.url\"\n                        >{{ method.name }}</v-btn\n                    >\n                </div>\n                <v-form class=\"mt-4\" @submit.prevent=\"submit\">\n                    <v-container class=\"ma-0 pa-0\">\n                        <v-row dense no-gutters class=\"mb-2 mt-2\">\n                            <v-text-field\n                                v-model=\"username.value.value\"\n                                :error-messages=\"username.errorMessage.value\"\n                                density=\"compact\"\n                                variant=\"outlined\"\n                                :label=\"t('LoginView.username')\"\n                            />\n                        </v-row>\n                        <v-row dense no-gutters class=\"mb-2 mt-2\">\n                            <v-text-field\n                                v-model=\"password.value.value\"\n                                :error-messages=\"password.errorMessage.value\"\n                                type=\"password\"\n                                density=\"compact\"\n                                variant=\"outlined\"\n                                :label=\"t('LoginView.password')\"\n                            />\n                        </v-row>\n                        <v-row dense no-gutters class=\"justify-end\">\n                            <v-btn\n                                type=\"submit\"\n                                color=\"primary\"\n                                variant=\"elevated\"\n                                prepend-icon=\"fas fa-right-to-bracket\"\n                                >{{ t(\"LoginView.login\") }}</v-btn\n                            >\n                        </v-row>\n                    </v-container>\n                </v-form>\n            </template>\n        </v-card>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useField, useForm } from \"vee-validate\";\nimport { type Ref, onMounted, ref } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport { useRouter } from \"vue-router\";\nimport { object as yupObject, string as yupString } from \"yup\";\n\nimport type { SocialAuthURL } from \"@/api\";\nimport { useAuth } from \"@/services/auth\";\n\nconst authService = useAuth();\nconst router = useRouter();\nconst { t } = useI18n();\n\nconst socialLoginUrls: Ref<SocialAuthURL[]> = ref([]);\n\n// Field validation rules\nconst validationSchema = yupObject({\n    username: yupString().required().min(1),\n    password: yupString().required().min(1),\n});\nconst { handleSubmit, setErrors } = useForm({ validationSchema });\nconst username = useField(\"username\");\nconst password = useField(\"password\");\n\nconst submit = handleSubmit(async (values) => {\n    const loginOk = await authService.login(values.username, values.password);\n    if (loginOk) {\n        await router.push({ name: \"index\" });\n    } else {\n        setErrors({\n            username: \"Incorrect username or password!\",\n            password: \"Incorrect username or password!\",\n        });\n    }\n});\n\nonMounted(async () => {\n    socialLoginUrls.value = await authService.getSocialAuthURLs();\n});\n</script>\n\n<style scoped lang=\"scss\">\n.opacity-95 {\n    opacity: 0.95;\n}\n</style>\n"],"names":["authService","useAuth","router","useRouter","t","useI18n","socialLoginUrls","ref","validationSchema","yupObject","yupString","handleSubmit","setErrors","useForm","username","useField","password","submit","values","onMounted"],"mappings":"4aAgEA,MAAMA,EAAcC,IACdC,EAASC,IACT,CAAE,EAAAC,GAAMC,IAERC,EAAwCC,EAAI,CAAA,CAAE,EAG9CC,EAAmBC,EAAU,CAC/B,SAAUC,EAAU,EAAE,SAAS,EAAE,IAAI,CAAC,EACtC,SAAUA,EAAU,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA,CACzC,EACK,CAAE,aAAAC,EAAc,UAAAC,CAAA,EAAcC,EAAQ,CAAE,iBAAAL,EAAkB,EAC1DM,EAAWC,EAAS,UAAU,EAC9BC,EAAWD,EAAS,UAAU,EAE9BE,EAASN,EAAa,MAAOO,GAAW,CAC1B,MAAMlB,EAAY,MAAMkB,EAAO,SAAUA,EAAO,QAAQ,EAEpE,MAAMhB,EAAO,KAAK,CAAE,KAAM,OAAS,CAAA,EAEzBU,EAAA,CACN,SAAU,kCACV,SAAU,iCAAA,CACb,CACL,CACH,EAED,OAAAO,EAAU,SAAY,CACFb,EAAA,MAAQ,MAAMN,EAAY,kBAAkB,CAAA,CAC/D"}